/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ReportTableDialog.java
 *
 * Created on Jul 30, 2009, 1:23:06 AM
 */

package com.datavirtue.nevitium.database.reports;
import com.datavirtue.nevitium.services.util.DV;
import com.datavirtue.nevitium.ui.OldFileDialog;
import com.datavirtue.nevitium.ui.PleaseWait;

import com.datavirtue.nevitium.ui.util.DecimalCellRenderer;
import com.datavirtue.nevitium.ui.util.Tools;

import java.beans.PropertyVetoException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.SwingConstants;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import org.h2.jdbc.JdbcConnection.Settings;

/**
 *
 * @author Data Virtue
 */
public class ReportTableDialog extends javax.swing.JDialog {

  

    public ReportTableDialog(java.awt.Frame parent, boolean modal, String report) {
        super(parent, modal);
        initComponents();
        

        
        java.awt.Dimension dim = DV.computeCenter((java.awt.Window) this);
        this.setLocation(dim.width, dim.height);

        this.setVisible(true);
        if (report.equalsIgnoreCase("sales")) initSalesReport();
        if (report.equalsIgnoreCase("revenue")) initRevenueReport();

        reportTable.setDefaultRenderer(java.lang.Float.class,
                new DecimalCellRenderer(10,2,SwingConstants.RIGHT));
        setDefaultDateRange();
    }

    public ReportTableDialog(java.awt.Frame parent, boolean modal, ReportInterface ri, Settings p) {
        super(parent, modal);
        initComponents();
        props = p;
        java.awt.Dimension dim = DV.computeCenter((java.awt.Window) this);
        this.setLocation(dim.width, dim.height);

        report = ri;

        reportTable.setDefaultRenderer(java.lang.Float.class,
                new DecimalCellRenderer(10,2,SwingConstants.RIGHT));

        reportTable.setModel(report.getPeriod());
        this.setTitle(report.getName());
        setColWidths();
        summaryBar.setText(report.getSummary());
        startDatePicker.setEnabled(false);
        endDatePicker.setEnabled(false);
        buildButton.setVisible(false);

        if (reportTable.getRowCount() > 0){
           printButton.setEnabled(true);
           //pdfButton.setEnabled(true);
           exportButton.setEnabled(true);
       }else {
            printButton.setEnabled(false);
            //pdfButton.setEnabled(false);
            exportButton.setEnabled(false);
       }

        max();
        setDefaultDateRange();
        this.setVisible(true);

    }

    private void setDefaultDateRange(){
        try {
            
            GregorianCalendar gc = new GregorianCalendar();
            gc.add(Calendar.MONTH, -1);
            gc.getTime();
            startDatePicker.setDate(gc.getTime());
            startDatePicker.commitEdit();
        } catch (PropertyVetoException ex) {
            Logger.getLogger(ReportTableDialog.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
private Settings props;

private boolean VAT = false;

    private void initSalesReport(){
        report = new SalesReport();
        report.SetTitle("Sales Report");
        this.setTitle("Sales Report");
        setColWidths();
        
    }

    private void initRevenueReport(){
        //report = new RevenueReport(db);
        report.SetTitle("Revenue Report");
        this.setTitle("Revenue Report");
        setColWidths();

    }

    private void setColWidths(){
        int [] cols = report.getColWidths();

        for (int i = 0; i < cols.length; i++){

            reportTable.getColumn(reportTable.getColumnName(i)).
                    setPreferredWidth(cols[i]);
            
        }
    }
  

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        reportTable = new javax.swing.JTable();
        startDatePicker = new com.michaelbaranov.microba.calendar.DatePicker();
        endDatePicker = new com.michaelbaranov.microba.calendar.DatePicker();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        maxButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        buildButton = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        printButton = new javax.swing.JButton();
        exportButton = new javax.swing.JButton();
        summaryBar = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Report Console");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        reportTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        reportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        reportTable.setRowMargin(2);
        reportTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(reportTable);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 746, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
        );

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Start Date");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("End Date");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        maxButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/businessmanager/res/Aha-24/enabled/Up.png"))); // NOI18N
        maxButton.setToolTipText("Maximize / Restore");
        maxButton.setMargin(new java.awt.Insets(2, 7, 2, 7));
        maxButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(424, Short.MAX_VALUE)
                .add(maxButton)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(maxButton)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        buildButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/businessmanager/res/Aha-24/enabled/Next.png"))); // NOI18N
        buildButton.setText("Build Report");
        buildButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(buildButton);

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        printButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/businessmanager/res/Aha-16/enabled/Print.png"))); // NOI18N
        printButton.setText("Print");
        printButton.setToolTipText("Print the report to a printer driver.");
        printButton.setEnabled(false);
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(printButton);

        exportButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/businessmanager/res/Aha-16/enabled/Export table.png"))); // NOI18N
        exportButton.setText("Export");
        exportButton.setToolTipText("Export this report to a text file.");
        exportButton.setEnabled(false);
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(exportButton);

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jToolBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 133, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 423, Short.MAX_VALUE)
                .add(jToolBar2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 166, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jToolBar2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jToolBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        summaryBar.setEditable(false);
        summaryBar.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        summaryBar.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        summaryBar.setText("Summary");
        summaryBar.setToolTipText("Report Summary");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(endDatePicker, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(startDatePicker, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 157, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, summaryBar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(startDatePicker, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(endDatePicker, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(19, 19, 19)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(summaryBar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void buildReport(){

        if (report == null) {
            javax.swing.JOptionPane.showMessageDialog(null,
                    "An error occured that prevented the report from being initialized.");
        }

       long s = startDatePicker.getDate().getTime();
       long e = endDatePicker.getDate().getTime();
       report.setDateRange(s, e);

       PleaseWait wait = new PleaseWait(null, false, "Building " + report.getName());
       wait.setVisible(true);
       wait.paint(wait.getGraphics());

       report.buildReport();
       wait.dispose();

       reportTable.setModel(report.getPeriod());
       setColWidths();
     
       summaryBar.setText(report.getSummary());
       if (!max) max();

       if (reportTable.getRowCount() > 0){
           printButton.setEnabled(true);
           //pdfButton.setEnabled(true);
           exportButton.setEnabled(true);
       }else {
            printButton.setEnabled(false);
            //pdfButton.setEnabled(false);
            exportButton.setEnabled(false);
       }



    }

    private void buildButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildButtonActionPerformed
       buildReport();
    }//GEN-LAST:event_buildButtonActionPerformed
private void setView(){

    if (reportTable.getColumnCount() == 0) return;
        int [] cols = report.ColsToDelete();
        if (cols == null) return;
        TableColumnModel cm = reportTable.getColumnModel();
        TableColumn tc;

        for (int i =0; i < cols.length; i++){

            tc = cm.getColumn(cols[i]);
            reportTable.removeColumn(tc);

        }
}
    private void reportTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportTableMouseClicked
       
    }//GEN-LAST:event_reportTableMouseClicked

    private void maxButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxButtonActionPerformed
        max();
    }//GEN-LAST:event_maxButtonActionPerformed

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        export();
    }//GEN-LAST:event_exportButtonActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        report.printReport();
    }//GEN-LAST:event_printButtonActionPerformed


    private void export(){

        OldFileDialog fd = new OldFileDialog(null, true, "C:\\", report.getName()+" Export.csv");
        fd.setVisible(true);
        if (fd.getPath().trim().equals("")) return;
        Tools.exportTable(reportTable.getModel(), fd.getPath(), true);

    }

    private void max() {

        if (max) {

            max = false;


        }else {

            small = this.getSize();
            spot = this.getLocation();
            max = true;

        }


        java.awt.Dimension dim = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
                if (!max) {
                    this.setSize(small);
                    maxButton.setIcon(new ImageIcon(getClass().getResource("/businessmanager/res/Aha-24/enabled/Up.png")));
                }
                    else {
                        dim.setSize(dim.getWidth(), dim.getHeight()-120);
                        this.setSize(dim);
                        maxButton.setIcon(new ImageIcon(getClass().getResource("/businessmanager/res/Aha-24/enabled/Down.png")));
                    }

        dim = DV.computeCenter((java.awt.Window) this);
                if (!max) this.setLocation(spot);
                    else this.setLocation(dim.width, 0);


        this.validateTree();


    }

   
   private Object value = null;
   private int valueCol = 0;
   
   private ReportInterface report;
   private boolean max = false;
   private java.awt.Dimension small;
   private java.awt.Point spot;
   private long oneDay = (60 * 60 * 1000L);

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buildButton;
    private com.michaelbaranov.microba.calendar.DatePicker endDatePicker;
    private javax.swing.JButton exportButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JButton maxButton;
    private javax.swing.JButton printButton;
    private javax.swing.JTable reportTable;
    private com.michaelbaranov.microba.calendar.DatePicker startDatePicker;
    private javax.swing.JTextField summaryBar;
    // End of variables declaration//GEN-END:variables

}
