/*
 * CheckDialog.java
 *
 * Created on July 13, 2007, 11:39 AM
 */
package com.datavirtue.nevitium.ui.checks;


import com.datavirtue.nevitium.ui.contacts.ContactsApp;
import com.datavirtue.nevitium.ui.util.JTextFieldFilter;
import java.awt.*;
import java.sql.SQLException;

import com.datavirtue.nevitium.ui.util.Tools;
import com.datavirtue.nevitium.services.CheckPrinterService;
import com.datavirtue.nevitium.models.checks.CheckStub;
import com.google.inject.Injector;
import com.datavirtue.nevitium.services.DiService;
import javax.swing.table.*;
import javax.swing.*;
import java.awt.event.*;
import com.datavirtue.nevitium.models.contacts.Contact;
import com.datavirtue.nevitium.models.settings.CheckSettings;
import com.datavirtue.nevitium.services.CheckSettingsService;
import com.datavirtue.nevitium.services.ExceptionService;
import com.datavirtue.nevitium.services.util.CurrencyUtil;
import com.datavirtue.nevitium.services.util.DV;
import com.datavirtue.nevitium.ui.util.AutoCompleteDocument;
import java.util.prefs.BackingStoreException;

/**
 *
 * @author Data Virtue
 */
public class CheckDialog extends javax.swing.JDialog {

    
    private final CheckSettingsService checkSettings;

    /**
     * Creates new form CheckDialog
     */
    public CheckDialog(java.awt.Frame parent, boolean modal, Contact contact, float amount, String memo) {
        super(parent, modal);
        initComponents();

        Injector injector = DiService.getInjector();
        checkSettings = injector.getInstance(CheckSettingsService.class);
        checkSettings.setObjectType(CheckSettings.class);

        amtField.setDocument(new JTextFieldFilter(JTextFieldFilter.FLOAT));
        
        java.awt.Dimension dim = DV.computeCenter((java.awt.Window) this);
        this.setLocation(dim.width, dim.height);
        this.populateItemList();
        //props = new Settings(workingPath);

        /* init */
        if (amount > 0) {
            amtField.setText(CurrencyUtil.money(amount));
        }
        if (contact != null) {
            setCustomer(contact);
        }
        if (memo.length() > 0) {
            forField.setText(memo);
        }

        toField.requestFocus();
        
        /* Close dialog on escape */
        ActionMap am = getRootPane().getActionMap();
        InputMap im = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        Object windowCloseKey = new Object();
        KeyStroke windowCloseStroke = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0);
        Action windowCloseAction = new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                setVisible(false);
                dispose();
            }
        };
        im.put(windowCloseStroke, windowCloseKey);
        am.put(windowCloseKey, windowCloseAction);
        /**/

        this.setVisible(true);
    }

    
    
    private java.util.ArrayList itemList;

    private void populateItemList() {

        itemList = new java.util.ArrayList();
        itemList.trimToSize();

        TableModel cat_tm = new DefaultTableModel(); //db.createTableModel("chkpayee");

        if (cat_tm != null && cat_tm.getRowCount() > 0) {

            for (int r = 0; r < cat_tm.getRowCount(); r++) {
                itemList.add((String) cat_tm.getValueAt(r, 1));
            }

        } else {
            itemList.add("N/A");
        }

        toField.setDocument(new AutoCompleteDocument(toField, itemList));
    }

    private void normalizeItemList(String s) {

        String txm;

        java.util.ArrayList al = null;

        //al = db.search("chkpayee", 1, s, false);

        if (al == null) {

            //db.saveRecord("chkpayee", new Object[]{0, s}, false);
            //db.close();

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        datePicker1 = new com.michaelbaranov.microba.calendar.DatePicker();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        toField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        forField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        indRadio = new javax.swing.JRadioButton();
        coRadio = new javax.swing.JRadioButton();
        printAddressCheckbox = new javax.swing.JCheckBox();
        amtField = new javax.swing.JTextField();
        jToolBar1 = new javax.swing.JToolBar();
        selectButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        goButton = new javax.swing.JButton();
        printSetupButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Print Check");

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 4, true));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/businessmanager/res/prnchk.gif"))); // NOI18N
        jLabel1.setToolTipText("Basic Check On Top Ink Jet / Laser Checks");

        jLabel5.setText("Standard Three-Part");

        jLabel6.setText("8.5 x 11 (A4) Voucher Checks");

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel5)
                    .add(jLabel6))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 245, Short.MAX_VALUE)
                .add(datePicker1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 135, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel5)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel6))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, datePicker1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        toField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        toField.setNextFocusableComponent(amtField);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("To:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Amount");

        forField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        forField.setNextFocusableComponent(goButton);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("For:");

        buttonGroup1.add(indRadio);
        indRadio.setText("Individual");
        indRadio.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        indRadio.setEnabled(false);
        indRadio.setMargin(new java.awt.Insets(0, 0, 0, 0));
        indRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indRadioActionPerformed(evt);
            }
        });

        buttonGroup1.add(coRadio);
        coRadio.setSelected(true);
        coRadio.setText("Company");
        coRadio.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        coRadio.setEnabled(false);
        coRadio.setMargin(new java.awt.Insets(0, 0, 0, 0));
        coRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coRadioActionPerformed(evt);
            }
        });

        printAddressCheckbox.setText("Print Address");
        printAddressCheckbox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        printAddressCheckbox.setEnabled(false);
        printAddressCheckbox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        amtField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        amtField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        selectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/businessmanager/res/Aha-16/enabled/Customers.png"))); // NOI18N
        selectButton.setText("Select");
        selectButton.setMargin(new java.awt.Insets(2, 7, 2, 7));
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(selectButton);

        clearButton.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/businessmanager/res/Aha-16/enabled/Corrupt text.png"))); // NOI18N
        clearButton.setText("Clear");
        clearButton.setMargin(new java.awt.Insets(2, 6, 2, 6));
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(clearButton);

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jPanel3Layout.createSequentialGroup()
                                .add(jLabel2)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(indRadio)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(coRadio)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(printAddressCheckbox)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jToolBar1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(toField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 378, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 124, Short.MAX_VALUE)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel3)
                            .add(amtField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(10, 10, 10))
                    .add(jLabel4)
                    .add(forField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 218, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel2)
                        .add(jLabel3)
                        .add(indRadio)
                        .add(coRadio)
                        .add(printAddressCheckbox))
                    .add(jToolBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(toField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(amtField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(forField)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        goButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/businessmanager/res/Aha-24/enabled/Play.png"))); // NOI18N
        goButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goButtonActionPerformed(evt);
            }
        });

        printSetupButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        printSetupButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/businessmanager/res/Aha-24/enabled/Form.png"))); // NOI18N
        printSetupButton.setText("Layout");
        printSetupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printSetupButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(printSetupButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 436, Short.MAX_VALUE)
                .add(goButton)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(goButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(printSetupButton))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed

        clearAction();

        return;


    }//GEN-LAST:event_clearButtonActionPerformed

    private void coRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coRadioActionPerformed

        toField.setText(address[0]);

    }//GEN-LAST:event_coRadioActionPerformed

    private void indRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indRadioActionPerformed

        toField.setText(address[1]);


    }//GEN-LAST:event_indRadioActionPerformed

    private String co = "";
    private String name = "";
    private String street = "";
    private String city = "";
   
    private void clearAction() {

        indRadio.setEnabled(false);
        coRadio.setEnabled(false);
        printAddressCheckbox.setEnabled(false);
        printAddressCheckbox.setSelected(false);
        toField.setText("");
        toField.requestFocus();

    }


    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed

        var contactsApp = new ContactsApp(null, true, true, false, true);
        try {
            contactsApp.display();
        } catch (SQLException ex) {
            ExceptionService.showErrorDialog(this, ex, "Error getting contacts from database");
            return;
        }catch (BackingStoreException e) {
            ExceptionService.showErrorDialog(this, e, "Error getting local settings");
            return;
        }
        var contact = contactsApp.getReturnValue();

        contactsApp.dispose(); 
       

        if (contact == null) {

            clearAction();
            return;

        } else {
            setCustomer(contact);
        }


    }//GEN-LAST:event_selectButtonActionPerformed

    private void setCustomer(Contact contact) {
       
        if (contact != null) {

            address = Tools.formatAddress(contact);

            if (address[0].trim().equals("")) {

                toField.setText(address[1]);
                indRadio.setSelected(true);

            } else {

                indRadio.setEnabled(true);
                coRadio.setEnabled(true);
                toField.setText(address[0]);
            }

            printAddressCheckbox.setEnabled(true);
            printAddressCheckbox.setSelected(true);
        }

    }

    private void printSetupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printSetupButtonActionPerformed

        new CheckPrintSettingsDialog(null, true);


    }//GEN-LAST:event_printSetupButtonActionPerformed

    private void printCheck(boolean printAddress, float amount) {
        CheckSettings settings=null;
        try {
            settings = checkSettings.getObject();
        } catch (SQLException e) {
            ExceptionService.showErrorDialog(this, e, "Error loading check settings");
        }
        if (settings == null || settings.isUseDefaultCheckSettings()) {
            settings = new CheckSettings();
        }      
        
        //if (printSig) checkPrinter.setSignatureImage(props.getProp("SIGPATH"));
        CheckPrinterService checkPrinter = new CheckPrinterService(settings.isPrintSignatureOnChecks(), false, printAddress, true);
        
        checkPrinter.setDateDim(settings.getCheckDate().x, settings.getCheckDate().y);

        checkPrinter.setAmountDim(settings.getAmount().x, settings.getAmount().y);

        checkPrinter.setPayToDim(settings.getPayee().x, settings.getPayee().y);

        checkPrinter.setSpellDim(settings.getSpelling().x, settings.getSpelling().y);

        checkPrinter.setMemoDim(settings.getMemo().x, settings.getMemo().y);

        checkPrinter.setSigDim(settings.getSignature().x, settings.getSignature().y);

        var font = settings.getCheckFont();
        checkPrinter.setDocFont(new java.awt.Font(font.getFontName(), Font.PLAIN, font.getFontSize()));
        font = settings.getPayeeFont();
        checkPrinter.setDocFont(new java.awt.Font(font.getFontName(), Font.PLAIN, font.getFontSize()));

        checkPrinter.add(
                new CheckStub(
                        toField.getText(), 
                        address, 
                        DV.datetoString(datePicker1.getDate().getTime()),
                        "", 
                        CurrencyUtil.money(amount), 
                        forField.getText())
        );
        
        checkPrinter.go();
    }
    
    private void goButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goButtonActionPerformed
        
        float amt;
        try {

            amt = Float.parseFloat(amtField.getText());
        } catch (NumberFormatException ex) {
            javax.swing.JOptionPane.showMessageDialog(null, "You need to enter a valid amount.");
            return;
        }

        if (toField.getText().trim().equals("")) {
            javax.swing.JOptionPane.showMessageDialog(null, "You need to enter a payee.");
            return;
        }

        //TODO: this.normalizeItemList(toField.getText().trim());
        boolean shouldPrintAddress = (printAddressCheckbox.isEnabled() && printAddressCheckbox.isSelected());
        this.printCheck(shouldPrintAddress, amt);
    }//GEN-LAST:event_goButtonActionPerformed

    String[] address;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amtField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clearButton;
    private javax.swing.JRadioButton coRadio;
    private com.michaelbaranov.microba.calendar.DatePicker datePicker1;
    private javax.swing.JTextField forField;
    private javax.swing.JButton goButton;
    private javax.swing.JRadioButton indRadio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JCheckBox printAddressCheckbox;
    private javax.swing.JButton printSetupButton;
    private javax.swing.JButton selectButton;
    private javax.swing.JTextField toField;
    // End of variables declaration//GEN-END:variables

}
