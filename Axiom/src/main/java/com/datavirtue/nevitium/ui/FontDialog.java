/*
 * FontDialog.java
 *
 * Created on November 25, 2008, 1:26 AM
 */

package com.datavirtue.nevitium.ui;
import businessmanager.*;
import java.awt.*;


import com.l2fprod.common.swing.plaf.FontChooserUI;
import com.l2fprod.common.swing.*;
import java.awt.GraphicsEnvironment;
import java.nio.charset.Charset;
import java.util.Arrays;
import java.util.Iterator;
import java.util.ResourceBundle;
import java.util.SortedMap;

/**
 *
 * @author  Data Virtue
 */
public class FontDialog extends javax.swing.JDialog {
    
    /** Creates new form FontDialog */
    public FontDialog(java.awt.Frame parent, boolean modal, Font f) {
        super(parent, modal);
        theFont = f;
        initComponents();
        jFontChooser1.setSelectedFont(f);
        theFont = f;
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFontChooser1 = new JFontChooser(new PDFFontChooserModel());
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Standard PDF Fonts");
        setAlwaysOnTop(true);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .add(cancelButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(okButton))
                    .add(jFontChooser1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jFontChooser1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                .add(8, 8, 8)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(okButton)
                    .add(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        
        this.setVisible(false);
        
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        
        theFont = jFontChooser1.getSelectedFont();
        this.setVisible(false);
        
    }//GEN-LAST:event_okButtonActionPerformed
    Font theFont;
       
    public Font getChosenFont() {
        
        
        return theFont;
        
        
    }
    
       
    public void setFontModel (com.l2fprod.common.swing.DefaultFontChooserModel fm) {
        
        
        
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private com.l2fprod.common.swing.JFontChooser jFontChooser1;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
    
}

/**
 * Default implementation of the FontChooserModel. It returns all available
 * fonts and commonly used font sizes.
 */
class PDFFontChooserModel implements FontChooserModel {

  public static final int[] DEFAULT_FONT_SIZES = {6, 8, 10, 11, 12, 14, 16, 18,
    20, 22, 24, 26};

  protected String[] fontFamilies;
  private String[] charSets;
  private int[] defaultFontSizes;
  private String previewMessage;

  public PDFFontChooserModel() {
    ResourceBundle bundle = ResourceBundle.getBundle(FontChooserUI.class
      .getName()
      + "RB");
    setPreviewMessage(bundle.getString("FontChooserUI.previewText"));

    /*String[] fontFamilies = GraphicsEnvironment.getLocalGraphicsEnvironment()
      .getAvailableFontFamilyNames();*/
    String [] fontFamilies = {"Times New Roman","Courier","Helvetica"};
    Arrays.sort(fontFamilies);
    setFontFamilies(fontFamilies);

    SortedMap map = Charset.availableCharsets();
    String[] charSets = new String[map.size()];
    int i = 0;
    for (Iterator iter = map.keySet().iterator(); iter.hasNext(); i++) {
      charSets[i] = (String)iter.next();
    }
    setCharSets(charSets);

    setDefaultFontSizes(DEFAULT_FONT_SIZES);
  }

  public void setFontFamilies(String[] fontFamilies) {
    this.fontFamilies = fontFamilies;
  }

  public String[] getFontFamilies(String charSetName) {
    return fontFamilies;
  }

  public void setDefaultFontSizes(int[] defaultFontSizes) {
    this.defaultFontSizes = defaultFontSizes;
  }

  public int[] getDefaultSizes() {
    return defaultFontSizes;
  }

  public void setCharSets(String[] charSets) {
    this.charSets = charSets;
  }

  public String[] getCharSets() {
    return charSets;
  }

  public void setPreviewMessage(String previewMessage) {
    this.previewMessage = previewMessage;
  }

  public String getPreviewMessage(String charSetName) {
    return previewMessage;
  }

}
