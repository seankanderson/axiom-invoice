/*
 * NoteDialog.java
 *
 * Created on June 30, 2006, 6:35 PM
 ** Copyright (c) Data Virtue 2006
 */
package com.datavirtue.nevitium.ui.invoices;

import com.datavirtue.nevitium.services.util.DV;
import com.datavirtue.nevitium.ui.util.LimitedDocument;

import javax.swing.table.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Sean K Anderson - Data Virtue
 * @rights Copyright Data Virtue 2006, 2007 All Rights Reserved.
 */
public class NoteDialog extends javax.swing.JDialog {

    /**
     * Creates new form NoteDialog
     */
    public NoteDialog(java.awt.Frame parent, boolean modal, boolean select) {

        super(parent, modal);
        initComponents();

        java.awt.Dimension dim = DV.computeCenter((java.awt.Window) this);
        this.setLocation(dim.width, dim.height);

        parentWin = parent;
        refreshTable();
        noteTextArea.setDocument(new LimitedDocument(320));
        noteTextArea.setLineWrap(true);
        noteTextArea.setWrapStyleWord(true);

    }

    private void refreshTable() {

        //tm = db.createTableModel(dbname, notesTable);
        notesTable.setModel(tm);
        setView();
    }

    private void setView() {

        if (notesTable.getColumnCount() < 1) {
            return;
        }

        TableColumnModel cm = notesTable.getColumnModel();
        TableColumn tc;

        // for (int i =0; i < cols.length; i++){
        tc = cm.getColumn(0);
        notesTable.removeColumn(tc);

        //  }
    }

    private void clearFields() {

        nameTextField.setText("");
        noteTextArea.setText("");

    }

    private void populateFields() {

        dataOut[0] = (Integer) tm.getValueAt(notesTable.getSelectedRow(), 0);
        nameTextField.setText((String) notesTable.getModel().getValueAt(notesTable.getSelectedRow(), 1));
        noteTextArea.setText((String) notesTable.getModel().getValueAt(notesTable.getSelectedRow(), 2));

    }

    private void setFieldsEnabled(boolean enabled) {

        nameTextField.setEnabled(enabled);
        noteTextArea.setEnabled(enabled);
    }

    public String getReturnValue() {

        return returnValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        noteTextArea = new javax.swing.JTextArea();
        nameTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        notesTable = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jToolBar1 = new javax.swing.JToolBar();
        newButton = new javax.swing.JButton();
        selectButton = new javax.swing.JButton();
        defaultButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Incoice Message Manager");
        setResizable(false);

        noteTextArea.setColumns(20);
        noteTextArea.setFont(new java.awt.Font("Courier", 0, 14)); // NOI18N
        noteTextArea.setLineWrap(true);
        noteTextArea.setRows(5);
        noteTextArea.setCaretColor(new java.awt.Color(255, 255, 0));
        noteTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                noteTextAreaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                noteTextAreaKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(noteTextArea);

        nameTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nameTextField.setToolTipText("The name of the message");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Name");

        saveButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Aha-16/enabled/Floppy.png"))); // NOI18N
        saveButton.setText("Save");
        saveButton.setToolTipText("Save your modifications");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        notesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        notesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                notesTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(notesTable);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        newButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Aha-16/enabled/Create.png"))); // NOI18N
        newButton.setText("New");
        newButton.setToolTipText("Create a new Message");
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(newButton);

        selectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Aha-16/enabled/OK.png"))); // NOI18N
        selectButton.setText("Select");
        selectButton.setToolTipText("Return the above selected message");
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(selectButton);

        defaultButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Aha-16/enabled/Check file.png"))); // NOI18N
        defaultButton.setText("Set Default");
        defaultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defaultButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(defaultButton);

        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Aha-16/enabled/Delete.png"))); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.setToolTipText("Permenant Delete!");
        deleteButton.setMargin(new java.awt.Insets(2, 7, 2, 7));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(deleteButton);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jToolBar1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jSeparator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(nameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 153, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(237, 237, 237)
                        .add(saveButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 148, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jToolBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(nameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(saveButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void noteTextAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_noteTextAreaKeyReleased

        //charLabel.setText(320 - noteTextArea.getText().length() + " Characters Left");

    }//GEN-LAST:event_noteTextAreaKeyReleased

    private void noteTextAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_noteTextAreaKeyTyped

        //charLabel.setText(320 - noteTextArea.getText().length() + " Characters Left");  

    }//GEN-LAST:event_noteTextAreaKeyTyped

    private void notesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_notesTableMouseClicked

        if (notesTable.getSelectedRow() > -1) {

            populateFields();
            setFieldsEnabled(true);

            saveButton.setEnabled(true);

            nameTextField.requestFocus();

            //charLabel.setText(320 - noteTextArea.getText().length() + " Characters Left");
        }


    }//GEN-LAST:event_notesTableMouseClicked

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed

        if (notesTable.getSelectedRow() > -1) {

            returnValue = noteTextArea.getText();
            this.setVisible(false);

        }


    }//GEN-LAST:event_selectButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed

        if (nameTextField.getText().equals("") && noteTextArea.getText().equals("")) {
            return;
        }

        if (!nameTextField.getText().equals("")); else {
            JOptionPane.showMessageDialog(this, "Please enter a name for the message.", "No Name?", JOptionPane.OK_OPTION);
            return;
        }

        if (!noteTextArea.getText().equals("")); else {
            JOptionPane.showMessageDialog(this, "Please enter a message.", "No Message?", JOptionPane.OK_OPTION);
            return;
        }

        dataOut[1] = new String(nameTextField.getText());
        dataOut[2] = new String(noteTextArea.getText());
        //db.saveRecord(dbname, dataOut, false);
        clearFields();
        setFieldsEnabled(false);
        refreshTable();

    }//GEN-LAST:event_saveButtonActionPerformed


    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

        if (notesTable.getSelectedRow() > -1) {
            int a = JOptionPane.showConfirmDialog(this, "Delete Selected Record?", "DELETE", JOptionPane.YES_NO_OPTION);

            if (a == 0) {
                Integer key = (Integer) notesTable.getModel().getValueAt(notesTable.getSelectedRow(), 0);
                //db.removeRecord(dbname, key);
                refreshTable();
                clearFields();
            }
        }

    }//GEN-LAST:event_deleteButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed

        clearFields();
        setFieldsEnabled(true);
        nameTextField.requestFocus();
        dataOut[0] = new Integer(0);

    }//GEN-LAST:event_newButtonActionPerformed

    private void defaultButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defaultButtonActionPerformed
        if (notesTable.getSelectedRow() > -1) {
            String defmsg = (String) notesTable.getModel().getValueAt(notesTable.getSelectedRow(), 1);
            //application.getProps().setProp("DEFAULT MSG", defmsg);
            javax.swing.JOptionPane.showMessageDialog(null, defmsg + " has been set as the default invoice message.");
            this.dispose();
        } else {

            if (notesTable.getRowCount() < 1) {
                javax.swing.JOptionPane.showMessageDialog(null,
                        "You must save a new message before you can set a default.");
            } else {
                javax.swing.JOptionPane.showMessageDialog(null,
                        "Please select a message before setting the default.");
            }
        }
    }//GEN-LAST:event_defaultButtonActionPerformed

    private String returnValue = "";
    
    private javax.swing.table.TableModel tm;
    private String dbname = "";
    private java.awt.Frame parentWin;
    private Object[] dataOut = new Object[3];


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton defaultButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JButton newButton;
    private javax.swing.JTextArea noteTextArea;
    private javax.swing.JTable notesTable;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton selectButton;
    // End of variables declaration//GEN-END:variables

}
