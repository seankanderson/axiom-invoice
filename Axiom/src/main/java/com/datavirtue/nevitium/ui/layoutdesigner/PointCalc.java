/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PointCalc.java
 *
 * Created on Sep 15, 2010, 3:14:09 PM
 */

package com.datavirtue.nevitium.ui.layoutdesigner;

import com.datavirtue.nevitium.services.util.CurrencyUtil;
import com.datavirtue.nevitium.services.util.DV;
import com.datavirtue.nevitium.ui.util.JTextFieldFilter;

/**
 *
 * @author Admin
 */
public class PointCalc extends javax.swing.JDialog {

    /** Creates new form PointCalc */
    public PointCalc(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        measurementField.setDocument(new JTextFieldFilter(JTextFieldFilter.FLOAT));

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        measurementField = new javax.swing.JTextField();
        metricBox = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        pointsLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PostScript Calculator");
        setAlwaysOnTop(true);
        setResizable(false);

        measurementField.setText("1");
        measurementField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                measurementFieldKeyReleased(evt);
            }
        });

        metricBox.setSelected(true);
        metricBox.setText("Metric(mm)");
        metricBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metricBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Type a length (SAE or Metric) and press enter.");

        pointsLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        pointsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pointsLabel.setText("0.0");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Points");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pointsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(measurementField, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(metricBox))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(measurementField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(metricBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(pointsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void metricBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metricBoxActionPerformed
        calculate();
    }//GEN-LAST:event_metricBoxActionPerformed

    private void measurementFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_measurementFieldKeyReleased
        calculate();
    }//GEN-LAST:event_measurementFieldKeyReleased

    private void calculate(){
        if (metricBox.isSelected()){
            float points = (2.83464567f * (float)DV.parseDouble(measurementField.getText()));
            pointsLabel.setText(CurrencyUtil.money(points));
        }else {
            float points = (72 * (float)DV.parseDouble(measurementField.getText()));
            pointsLabel.setText(CurrencyUtil.money(points));
        }
        measurementField.requestFocus();
    }
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField measurementField;
    private javax.swing.JCheckBox metricBox;
    private javax.swing.JLabel pointsLabel;
    // End of variables declaration//GEN-END:variables

}
