/*
 * ConnLabelDialog.java
 *
 * Created on January 26, 2007, 8:46 AM
 */

package com.datavirtue.nevitium.ui.contacts;
import com.datavirtue.nevitium.services.PdfLabelService;
import com.datavirtue.nevitium.database.reports.ReportFactory;
import com.datavirtue.nevitium.services.util.DV;

import java.io.*;
import javax.swing.*;
import java.awt.event.*;
import com.lowagie.text.Font;
import org.h2.jdbc.JdbcConnection.Settings;

/**
 *
 * @author  Data Virtue
 */
public class ConnLabelDialog extends javax.swing.JDialog {
    
    /** Creates new form ConnLabelDialog */
    public ConnLabelDialog(java.awt.Frame parent, boolean modal,
            javax.swing.table.TableModel tm, int [] selected_rows) {
        super(parent, modal);
        initComponents();
        //workingPath = path;
        this.props = props;
         /* Close dialog on escape */
        ActionMap am = getRootPane().getActionMap();
        InputMap im = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        Object windowCloseKey = new Object();
        KeyStroke windowCloseStroke = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0);
        Action windowCloseAction = new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                setVisible(false);
                dispose();
            }
        };
        im.put(windowCloseStroke, windowCloseKey);
        am.put(windowCloseKey, windowCloseAction);
        /**/
        
        
        java.awt.Dimension dim = DV.computeCenter((java.awt.Window) this);
        this.setLocation(dim.width, dim.height);

        countLabel.setText(selected_rows.length + " Row(s) selected.");
        
        SpinnerNumberModel model = new SpinnerNumberModel(1, 1, null, 1); 
        eachSpinner.setModel(model);
        
        model = new SpinnerNumberModel(0, 0, null, 1); ;
        skipSpinner.setModel(model);
        
        this.selected_rows = selected_rows;
        this.tm = tm;
        
        labelPanel1.setFile("defs.txt");
        this.setVisible(true);
        
    }
    private Settings props;
    private String workingPath = "";
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        labelPanel1 = new com.datavirtue.nevitium.ui.LabelPanel();
        jPanel1 = new javax.swing.JPanel();
        goButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        eachSpinner = new javax.swing.JSpinner();
        skipSpinner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ucBox = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        fastPrintRadio = new javax.swing.JRadioButton();
        viewPrintRadio = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        coBox = new javax.swing.JCheckBox();
        attnBox = new javax.swing.JCheckBox();
        nameBox = new javax.swing.JCheckBox();
        barcodeBox = new javax.swing.JCheckBox();
        steBox = new javax.swing.JCheckBox();
        countLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Address Labels");
        setResizable(false);

        labelPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        goButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/businessmanager/res/Aha-24/enabled/Play.png"))); // NOI18N
        goButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goButtonActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("Skip");

        jLabel1.setText("How many of each");

        ucBox.setSelected(true);
        ucBox.setText("UPPERCASE");
        ucBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        ucBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(skipSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(eachSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(85, Short.MAX_VALUE)
                .add(ucBox)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(24, 24, 24)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(eachSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(skipSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 20, Short.MAX_VALUE)
                .add(ucBox)
                .addContainerGap())
        );

        buttonGroup1.add(fastPrintRadio);
        fastPrintRadio.setText("Fast Print");
        fastPrintRadio.setToolTipText("Windows Default Printer");
        fastPrintRadio.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        fastPrintRadio.setMargin(new java.awt.Insets(0, 0, 0, 0));

        buttonGroup1.add(viewPrintRadio);
        viewPrintRadio.setSelected(true);
        viewPrintRadio.setText("View/Print");
        viewPrintRadio.setToolTipText("Pdf Viewer");
        viewPrintRadio.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        viewPrintRadio.setMargin(new java.awt.Insets(0, 0, 0, 0));

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(viewPrintRadio)
                    .add(fastPrintRadio))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(71, Short.MAX_VALUE)
                .add(fastPrintRadio)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(viewPrintRadio)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        coBox.setSelected(true);
        coBox.setText("Company");
        coBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        coBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        attnBox.setText("ATTN:");
        attnBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        attnBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        nameBox.setSelected(true);
        nameBox.setText("First Last");
        nameBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        nameBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        barcodeBox.setText("Barcode");
        barcodeBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        barcodeBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        steBox.setText("Address #2");
        steBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        steBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(coBox)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(attnBox)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(nameBox))
                    .add(barcodeBox)
                    .add(steBox))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(coBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(attnBox)
                    .add(nameBox))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(steBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(barcodeBox)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        countLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        countLabel.setText("Row(s) selected.");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(goButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 76, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(countLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 171, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(countLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 71, Short.MAX_VALUE)
                        .add(goButton))
                    .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, labelPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(labelPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void goButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goButtonActionPerformed
        
        
        generateLabels();
        
        
    }//GEN-LAST:event_goButtonActionPerformed
    
    protected void generateLabels() {
        
        float [] def = labelPanel1.getLabelDef();
        
        if (def != null){  //begin action block
            
            String filename = "labels";
            
            boolean good = false;
            
            int no = 0;
            
            do {
                
                if (new File(filename + ".pdf").exists()){
                    
                    if ( new File(filename + ".pdf").canWrite()){
                        
                        good = true;
                        
                    }
                    else {
                        
                        no++;
                        filename = filename + no;
                        
                    }
                    
               }else good = true;
                
                
            }while (!good);
             
             
            if (no > 20){  //clean up old files
                
                for (int i = 1; i < no - 10; i++){  
                    
                    if (new File ("labels" + i + ".pdf").exists() && new File ("labels" + i + ".pdf").canWrite()){
                        
                        File fx = new File("labels" + i + ".pdf"); // delete file
                        fx.delete();
                        
                        
                    }
                                        
                }
                
            }
                        
            filename = filename + ".pdf";
            PdfLabelService pdf = new PdfLabelService (def, filename);          
               
            /* Set a good font for mailings */
            pdf.setFont(new Font(Font.HELVETICA, 8, Font.BOLD));
             
            
            /* Setup PDFLabels object */
            
            /* Access tableModel and send data to the PDFLabels object */
        
            int row;
            int howmany = (Integer) eachSpinner.getValue();
            int skip = (Integer)skipSpinner.getValue();
            
            pdf.setStartLabel(skip + 1);
            
            StringBuilder sb = new StringBuilder();
            String tmp;
            
            for (int r = 0; r < selected_rows.length; r++){
                
                row = selected_rows[r];

                String zone = (String)tm.getValueAt(row, 17);
                
                for (int j = 0; j < howmany; j++ ){  //how many of each label?
                    
                if (coBox.isSelected()) sb.append((String)tm.getValueAt(row,1) + nl);
                
                if (nameBox.isSelected()) {
                    
                    if (attnBox.isSelected()) tmp = "ATTN:" + (String) tm.getValueAt(row, 2) + ' ' + (String) tm.getValueAt(row, 3);
                        else tmp = (String) tm.getValueAt(row, 2) + ' ' + (String) tm.getValueAt(row, 3); 
                    
                    sb.append(tmp + nl);
                    tmp = "";
                    
                }
                
                sb.append(tm.getValueAt(row,4) + nl);  //Address #1
                
                if (steBox.isSelected()) sb.append(tm.getValueAt(row,5) + nl );
                
                if (zone.equalsIgnoreCase("US") ||
                        zone.equalsIgnoreCase("CA") ||
                        zone.equalsIgnoreCase("AU")){
                
                    sb.append(tm.getValueAt(row,6) + "  " + //City-Towne
                            tm.getValueAt(row,7)+ "  "+ //State
                            tm.getValueAt(row,8));  //postal code
                
                }

                if (zone.equalsIgnoreCase("GB") ||
                        zone.equalsIgnoreCase("ZA") || zone.equalsIgnoreCase("IN")){

                    sb.append(tm.getValueAt(row,6) + nl);
                    sb.append(tm.getValueAt(row,8));  //postal code

                }

                /* UPPERCASE? */
                if (ucBox.isSelected()) tmp = sb.toString().toUpperCase();
                else tmp = sb.toString();
                
                if (barcodeBox.isSelected()) pdf.appendPostnet(tmp, (String)tm.getValueAt(row,8));
                else pdf.add(tmp);
                
               //System.out.println(sb.toString());
                tmp = "";
                sb = new StringBuilder();
                }
                
            }
        
        pdf.finnish();
        
        if (viewPrintRadio.isSelected()) {
        
            //Settings props = new Settings(workingPath + "settings.ini");
                
            //ReportFactory.veiwPDF(props.getProp("ACRO"),filename, props);
        
            props = null;
        }
        
//        if (fastPrintRadio.isSelected()) ReportFactory.windowsFastPrint(filename, props);
//        
//        }else {  //end action block
//            
//            
//            javax.swing.JOptionPane.showMessageDialog(null, "Make sure the values entered into the Dimension fields are floating point (decimal) numbers.");
//            
//        }
        
        }
    }
    
    private int [] selected_rows;
    private javax.swing.table.TableModel tm;
    private String nl = System.getProperty("line.separator");
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox attnBox;
    private javax.swing.JCheckBox barcodeBox;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox coBox;
    private javax.swing.JLabel countLabel;
    private javax.swing.JSpinner eachSpinner;
    private javax.swing.JRadioButton fastPrintRadio;
    private javax.swing.JButton goButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private com.datavirtue.nevitium.ui.LabelPanel labelPanel1;
    private javax.swing.JCheckBox nameBox;
    private javax.swing.JSpinner skipSpinner;
    private javax.swing.JCheckBox steBox;
    private javax.swing.JCheckBox ucBox;
    private javax.swing.JRadioButton viewPrintRadio;
    // End of variables declaration//GEN-END:variables
    
}
