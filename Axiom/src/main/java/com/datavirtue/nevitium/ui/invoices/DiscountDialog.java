
/*
 * DiscountDialog.java
 *
 * Created on Nov 30, 2011, 11:28:46 PM
 */
package com.datavirtue.nevitium.ui.invoices;

import com.datavirtue.nevitium.models.invoices.InvoiceItem;
import com.datavirtue.nevitium.services.util.CurrencyUtil;
import com.datavirtue.nevitium.services.util.DV;
import com.datavirtue.nevitium.ui.util.JTextFieldFilter;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;

public class DiscountDialog extends javax.swing.JDialog {
    private Image winIcon;
    private InvoiceItem itemToDiscount;
    private InvoiceItem discountItem;
    
    /** Creates new form DiscountDialog */
    public DiscountDialog(java.awt.Frame parent, boolean modal, InvoiceItem item) {
        super(parent, modal);
        itemToDiscount = item;
        Toolkit tools = Toolkit.getDefaultToolkit();
        winIcon = tools.getImage(getClass().getResource("/businessmanager/res/Aha-16/enabled/Percent.png"));

        initComponents();
       
        percentageField.setDocument(new JTextFieldFilter(JTextFieldFilter.FLOAT));
        
        this.populateItemList();
        
        
        percentageField.requestFocus();
        
        java.awt.Dimension dim = DV.computeCenter((java.awt.Window) this);
        this.setLocation(dim.width, dim.height);       
        
        if (item == null) { 
            this.discountStrategyCheckbox.setEnabled(false);
            this.discountStrategyCheckbox.setSelected(false);
        }
        
    }

    public InvoiceItem getDiscountItem() {
        return this.discountItem;
    }
    
    public void display() {
        
        if (itemToDiscount != null) {
            discDescField.setText(itemToDiscount.getDescription());
        }
        this.setVisible(true);
    }
       
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        discDescField = new javax.swing.JTextField();
        percentageField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        applyButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        amountField = new javax.swing.JTextField();
        autoInsertBox = new javax.swing.JCheckBox();
        helpTextField = new javax.swing.JTextField();
        discountStrategyCheckbox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Item Discount");
        setResizable(false);

        jLabel1.setText("Discount Description");

        discDescField.setNextFocusableComponent(percentageField);
        discDescField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                discDescFieldKeyPressed(evt);
            }
        });

        percentageField.setNextFocusableComponent(discDescField);
        percentageField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                percentageFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                percentageFieldKeyReleased(evt);
            }
        });

        jLabel2.setText("Percentage");

        applyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/businessmanager/res/Aha-16/enabled/Apply.png"))); // NOI18N
        applyButton.setText("Apply");
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Amount");

        autoInsertBox.setSelected(true);
        autoInsertBox.setText("Auto Insert %");
        autoInsertBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoInsertBoxActionPerformed(evt);
            }
        });

        helpTextField.setText("The discount appears as an item on the invoice.");

        discountStrategyCheckbox.setSelected(true);
        discountStrategyCheckbox.setText("Link discount to selected item");
        discountStrategyCheckbox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                discountStrategyCheckboxItemStateChanged(evt);
            }
        });
        discountStrategyCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountStrategyCheckboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(helpTextField)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(autoInsertBox)
                                .addGap(18, 18, 18)
                                .addComponent(discountStrategyCheckbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(discDescField, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(percentageField)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(amountField)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addComponent(applyButton)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(discDescField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(percentageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(amountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(applyButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(autoInsertBox)
                        .addComponent(discountStrategyCheckbox)))
                .addGap(18, 18, 18)
                .addComponent(helpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        
        applyDiscount();
        
    }//GEN-LAST:event_applyButtonActionPerformed
    String kptemp;
    int percentIndex = -1;
    private void percentageFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_percentageFieldKeyReleased
        double calc = ((DV.parseDouble(percentageField.getText()) * .01f) * itemToDiscount.getItemSubtotal());
        amountField.setText(CurrencyUtil.money(calc * -1));
        kptemp = discDescField.getText();
        
        percentIndex = kptemp.indexOf("%");
        if (!autoInsertBox.isSelected()) return;
        if (percentageField.getText().length() == 0){
            percentIndex += 2;
            kptemp = kptemp.substring(percentIndex, kptemp.length());
            discDescField.setText(kptemp);
            return;
        }else if (percentIndex > -1) {
            if (percentIndex > 0) percentIndex+=2;
            kptemp = kptemp.substring(percentIndex, kptemp.length());
        } 
               
        discDescField.setText(percentageField.getText() + "% " + kptemp);
    }//GEN-LAST:event_percentageFieldKeyReleased

    private void percentageFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_percentageFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) applyDiscount();
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            
            this.setVisible(false);
        }
        
    }//GEN-LAST:event_percentageFieldKeyPressed

    private void autoInsertBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoInsertBoxActionPerformed
        
        kptemp = discDescField.getText();
        percentIndex = kptemp.indexOf("%");
        if (percentIndex < 0) return;
        percentIndex += 2;
        kptemp = kptemp.substring(percentIndex, kptemp.length());
        discDescField.setText(kptemp);
        percentageField.requestFocus();
        
    }//GEN-LAST:event_autoInsertBoxActionPerformed

    private void discDescFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discDescFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) percentageField.requestFocus();
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            
            this.setVisible(false);
        }
    }//GEN-LAST:event_discDescFieldKeyPressed

    private void discountStrategyCheckboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_discountStrategyCheckboxItemStateChanged
        this.helpTextField.setText("Discounting the item allows better cost tracking");
    }//GEN-LAST:event_discountStrategyCheckboxItemStateChanged

    private void discountStrategyCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountStrategyCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_discountStrategyCheckboxActionPerformed

    
    private void applyDiscount(){
        
        // if discount is greater than then margin of the item, then the difference is recorded as cost for the discount.
        
        discountItem = new InvoiceItem();
        double unit  = 0.00;
        double cost = 0.00;
        unit = DV.parseDouble(amountField.getText());
        discountItem.setQuantity(1.00);
        discountItem.setDiscount(true);
        discountItem.setDescription(discDescField.getText());
        discountItem.setUnitPrice(unit);
        discountItem.setCost(cost);
        
        
        // apply discount mapped to item always, interject 
        
        
        if (this.discountStrategyCheckbox.isSelected() && this.itemToDiscount != null) {
            discountItem.setRelatedInvoiceItem(this.itemToDiscount);
            
        }
                
        //this.normalizeItemList(discDescField.getText());
        
        this.setVisible(false);    
    }
    
    private void populateItemList () {
        
//         itemList = new java.util.ArrayList();
//        itemList.trimToSize();
//        
//        TableModel cat_tm = db.createTableModel("miscitems");
//        
//        if (cat_tm != null && cat_tm.getRowCount() > 0){
//            
//            for (int r = 0; r < cat_tm.getRowCount(); r++){
//            
//                itemList.add((String) cat_tm.getValueAt(r, 1));
//                
//            }
//        
//         
//        }else {
//            
//            itemList.add("N/A");
//        }
//        
//        discDescField.setDocument(new AutoCompleteDocument( discDescField, itemList ));
        
        
    }
    
    private void normalizeItemList(String s) {
        
//        
//        String txm;
//        
//        java.util.ArrayList al;
//        
//        al = db.search("miscitems", 1, s, false);
//        
//        if (al == null){
//            
//            db.saveRecord("miscitems",new Object [] {new Integer(0), s} ,false);
//           
//        }
//        
        
    }
    
    
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountField;
    private javax.swing.JButton applyButton;
    private javax.swing.JCheckBox autoInsertBox;
    private javax.swing.JTextField discDescField;
    private javax.swing.JCheckBox discountStrategyCheckbox;
    private javax.swing.JTextField helpTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField percentageField;
    // End of variables declaration//GEN-END:variables
}
